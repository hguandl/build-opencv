# This is a basic workflow to help you get started with Actions

name: Build OpenCV Libraries

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the regression2 branch
on:
  push:
    branches: [ master ]

env:
  OPENCV_REF: 4.5.3

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-opencv:

    strategy:
      matrix:
        os: [ubuntu, windows]
        include:
          - os: macos
            arch: arm64
          - os: macos
            arch: x86_64

    defaults:
      run:
        shell: bash
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          windows_compile_environment: msvc

      - name: Install Linux Packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake

      - uses: ilammy/msvc-dev-cmd@v1
        id: msvc-env
        if: runner.os == 'Windows'

      - name: Get specific version CMake, v3.24.3
        if: runner.os == 'Windows'
        uses: lukka/get-cmake@v3.24.3

      - name: Setup MSVC environment
        if: steps.msvc-env.conclusion == 'success'
        run: |
          echo "CC=cl" >> $GITHUB_ENV
          echo "CXX=cl" >> $GITHUB_ENV
          
      - name: Setup macOS environment
        if: runner.os == 'macOS'
        env:
          ARCH: ${{ matrix.arch }}
        run: |
          if [[ "$ARCH" = "arm64" ]]; then
            echo 'AARCH64=1' >> $GITHUB_ENV
            echo 'CMAKE_OSX_ARCHITECTURES='arm64' >> $GITHUB_ENV
          fi
          if [[ "$ARCH" = "x86_64" ]]; then
            echo 'X86_64=1' >> $GITHUB_ENV
            echo 'CMAKE_OSX_ARCHITECTURES='x86_64' >> $GITHUB_ENV
          fi

      - name: Clone OpenCV
        uses: actions/checkout@v3
        with:
          repository: opencv/opencv
          path: opencv
          ref: ${{ env.OPENCV_REF }}

      - name: Configure OpenCV
        run: |
            cd ${GITHUB_WORKSPACE}/opencv
            mkdir build && cd build
            cmake .. \
              -DCMAKE_BUILD_TYPE=Release \
              -DENABLE_CCACHE=ON \
              -DBUILD_SHARED_LIBS=ON \
              -DWITH_IPP=OFF \
              -DWITH_LAPACK=OFF \
              -DWITH_EIGEN=OFF \
              -DWITH_JPEG=ON \
              -DWITH_PNG=ON \
              -DWITH_PROTOBUF=OFF \
              -DWITH_TIFF=ON \
              -DBUILD_TESTS=OFF \
              -DBUILD_JAVA=OFF \
              -DBUILD_PERF_TESTS=OFF \
              -DBUILD_EXAMPLES=OFF \
              -DWITH_FFMPEG=OFF \
              -DOPENCV_FORCE_3RDPARTY_BUILD=ON \
              -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/build/opencv \
              -DBUILD_opencv_world=ON

      - name: Build OpenCV
        run: |
            cd ${GITHUB_WORKSPACE}/opencv/build
            cmake --build . --config Release --target install --parallel ${PARALLEL_JOBS:-$(nproc --all)}

      - name: Package OpenCV
        run: |
            cd ${GITHUB_WORKSPACE}
            cd build
            tar -czvf OpenCV-${{ runner.os }}.tar.gz opencv

      - name: Upload OpenCV
        uses: actions/upload-artifact@v3
        with:
          name: opencv-${{ runner.os }}
          path: build/OpenCV-${{ runner.os }}.tar.gz

  upload-release:
    needs: build-opencv
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: download

      - name: Move files
        run: |
            cd ${GITHUB_WORKSPACE}
            mkdir release
            mv download/*/* ${GITHUB_WORKSPACE}/release/
            cd ${GITHUB_WORKSPACE}/release
            sha256sum --tag * > ${GITHUB_WORKSPACE}/hashes.txt

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: hashes.txt
          tag_name: ${{ env.OPENCV_REF }}
          files: |
            release/*


